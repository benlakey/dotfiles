{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Java",
	"scopeName": "source.java",
	"patterns": [
		{
			"begin": "\\b(package)\\b\\s*",
			"beginCaptures": {
				"1": {
					"name": "keyword.other.package.java"
				}
			},
			"end": ";",
			"name": "meta.package.java",
			"patterns": [
				{
					"include": "#class-name"
				},
				{
					"include": "#comments"
				}
			]
		},
		{
			"begin": "\\b(import)\\b\\s*\\b(static)?\\b\\s",
			"beginCaptures": {
				"1": {
					"name": "keyword.other.import.java"
				},
				"2": {
					"name": "storage.modifier.java"
				}
			},
			"end": ";",
			"name": "meta.import.java",
			"contentName": "storage.modifier.import.java",
			"patterns": [
				{
					"include": "#class-name"
				},
				{
					"include": "#comments"
				}
			]
		},
		{
			"include": "#code"
		}
	],
	"repository": {
		"annotation": {
			"patterns": [
				{
					"begin": "(@[^\\s(]+)(\\()",
					"beginCaptures": {
						"1": {
							"name": "punctuation.definition.tag"
						},
						"2": {
							"name": "punctuation.definition.tag.left"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.tag.right"
						}
					},
					"name": "meta.declaration.annotation.java",
					"patterns": [
						{
							"captures": {
								"1": {
									"name": "punctuation.definition.tag.key"
								},
								"2": {
									"name": "punctuation.definition.tag.assign"
								}
							},
							"match": "(\\w*)\\s*(=)"
						},
						{
							"include": "#code"
						}
					]
				},
				{
					"match": "@\\w+",
					"name": "punctuation.definition.tag"
				}
			]
		},
		"class-declaration": {
			"begin": "(?<!\\.)\\b(class|interface|@interface)\\b",
			"beginCaptures": {
				"1": {
					"name": "keyword.class.java"
				}
			},
			"end": "}",
			"name": "meta.class.java",
			"patterns": [
				{
					"begin": "\\b(\\w+)\\b",
					"beginCaptures": {
						"1": {
							"name": "entity.name.class.java"
						}
					},
					"end": "(?={)",
					"name": "meta.class.header.java",
					"patterns": [
						{
							"include": "#keywords"
						},
						{
							"include": "#class-name"
						}
					]
				},
				{
					"begin": "{",
					"end": "(?=})",
					"name": "meta.class.body.java",
					"patterns": [
						{
							"include": "#code"
						}
					]
				}
			]
		},
		"code": {
			"patterns": [
				{
					"include": "#keywords"
				},
				{
					"include": "#comments"
				},
				{
					"include": "#constants"
				},
				{
					"include": "#annotation"
				},
				{
					"include": "#class-declaration"
				},
				{
					"include": "#catch"
				},
				{
					"include": "#throws"
				},
				{
					"include": "#block"
				},
				{
					"include": "#declaration"
				}
			]
		},
		"keywords":  {
			"patterns": [
				{
					"match": "\\b(try|finally|throw|return|break|continue|default|do|for|while|switch|case|if|else|goto)\\b",
					"name": "keyword.control.java"
				},
				{
					"match": "\\b(new|instanceof)\\b",
					"name": "keyword.control.java"
				},
				{
					"match": "\\.(class)\\b",
					"captures": {
						"1": {
							"name": "keyword.control.java"
						}
					}
				},
				{
					"match": "\\b(private|public|protected|static|final|const|extends|implements)\\b",
					"name": "storage.modifier.java"
				},
				{
					"match": "\\b(this|super)\\b",
					"name": "variable.language.java"
				}
			]
		},
		"comments": {
			"patterns": [
				
				{
					"begin": "/\\*",
					"captures": {
						"0": {
							"name": "punctuation.definition.comment.java"
						}
					},
					"end": "\\*/",
					"name": "comment.block.java"
				},
				{
					"begin": "(^[ \\t]+)?(?=//)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.whitespace.comment.leading.java"
						}
					},
					"end": "(?!\\G)",
					"patterns": [
						{
							"begin": "//",
							"beginCaptures": {
								"0": {
									"name": "punctuation.definition.comment.java"
								}
							},
							"end": "\\n",
							"name": "comment.line.double-slash.java"
						}
					]
				}
			]
		},
		"constants": {
			"patterns": [
				{
					"match": "\\b(null|true|false)\\b",
					"name": "constant.numeric.java"
				},
				{
					"match": "(?x)\n\\b(?<!\\$)\n0(x|X)\n(\n  (?<!\\.)[0-9a-fA-F]([0-9a-fA-F_]*[0-9a-fA-F])?[Ll]?(?!\\.)\n  |\n  (\n    [0-9a-fA-F]([0-9a-fA-F_]*[0-9a-fA-F])?\\.?\n    |\n    ([0-9a-fA-F]([0-9a-fA-F_]*[0-9a-fA-F])?)?\\.[0-9a-fA-F]([0-9a-fA-F_]*[0-9a-fA-F])?\n  )\n  [Pp][+-]?[0-9]([0-9_]*[0-9])?[FfDd]?\n)\n\\b(?!\\$)",
					"name": "constant.numeric.hex.java"
				},
				{
					"match": "\\b(?<!\\$)0(b|B)[01]([01_]*[01])?[Ll]?\\b(?!\\$)",
					"name": "constant.numeric.binary.java"
				},
				{
					"match": "\\b(?<!\\$)0[0-7]([0-7_]*[0-7])?[Ll]?\\b(?!\\$)",
					"name": "constant.numeric.octal.java"
				},
				{
					"match": "(?x)\n(?<!\\$)\n(\n  \\b[0-9]([0-9_]*[0-9])?\\.\\B(?!\\.)\n  |\n  \\b[0-9]([0-9_]*[0-9])?\\.([Ee][+-]?[0-9]([0-9_]*[0-9])?)[FfDd]?\\b\n  |\n  \\b[0-9]([0-9_]*[0-9])?\\.([Ee][+-]?[0-9]([0-9_]*[0-9])?)?[FfDd]\\b\n  |\n  \\b[0-9]([0-9_]*[0-9])?\\.([0-9]([0-9_]*[0-9])?)([Ee][+-]?[0-9]([0-9_]*[0-9])?)?[FfDd]?\\b\n  |\n  (?<!\\.)\\B\\.[0-9]([0-9_]*[0-9])?([Ee][+-]?[0-9]([0-9_]*[0-9])?)?[FfDd]?\\b\n  |\n  \\b[0-9]([0-9_]*[0-9])?([Ee][+-]?[0-9]([0-9_]*[0-9])?)[FfDd]?\\b\n  |\n  \\b[0-9]([0-9_]*[0-9])?([Ee][+-]?[0-9]([0-9_]*[0-9])?)?[FfDd]\\b\n  |\n  \\b(0|[1-9]([0-9_]*[0-9])?)(?!\\.)[Ll]?\\b\n)\n(?!\\$)",
					"name": "constant.numeric.decimal.java"
				},
				{
					"begin": "\"",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.java"
						}
					},
					"end": "\"",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.java"
						}
					},
					"name": "string.quoted.double.java",
					"patterns": [
						{
							"match": "\\\\.",
							"name": "constant.character.escape.java"
						}
					]
				},
				{
					"begin": "'",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.java"
						}
					},
					"end": "'",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.java"
						}
					},
					"name": "string.quoted.single.java",
					"patterns": [
						{
							"match": "\\\\.",
							"name": "constant.character.escape.java"
						}
					]
				}
			]
		},
		"catch": {
			"patterns": [
				{
					"begin": "\\b(catch)\\s*(?=\\()",
					"beginCaptures": {
						"1": {
							"name": "keyword.control.catch.java"
						}
					},
					"end": "(?={)",
					"name": "meta.catch.java",
					"patterns": [
						{
							"match": "(\\w+\\.)*[A-Z]\\w*",
							"name": "entity.name.type.exception.java"
						},
						{
							"match": "[a-z]\\w*",
							"name": "variable.other.declaration.java"
						},
						{
							"include": "#comments"
						}
					]
				}
			]
		},
		"throws": {
			"patterns": [
				{
					"begin": "\\b(throws)\\b",
					"beginCaptures": {
						"1": {
							"name": "keyword.other.throws.java"
						}
					},
					"end": "(?=[{;])",
					"name": "meta.throws.java",
					"patterns": [
						{
							"match": "(\\w+\\.)*[A-Z]\\w*",
							"name": "entity.name.type.exception.java"
						},
						{
							"include": "#comments"
						}
					]
				}
			]
		},
		"block": {
			"patterns": [
				{
					"begin": "{",
					"end": "}",
					"name": "meta.block.java",
					"patterns": [
						{
							"include": "#code"
						}
					]
				}
			]
		},
		"declaration": {
			"patterns": [
				{
					"match": "\\b((\\w+\\.)*\\w+)\\b\\s*(?<GROUP><([^<>]|\\g<GROUP>)+>)?\\s*[\\[\\]]*\\s*\\b(\\w+)\\b\\s*(?=[,;:=\\(\\)])",
					"captures": {	
						"1": {
							"patterns": [
								{
									"match": "\\bvar\\b",
									"name": "keyword.other.var.java"
								},
								{
									"match": "\\b\\w+\\b",
									"name": "entity.name.type.java"
								}
							]
						},
						"3": {
							"name": "meta.type-parameters.java",
							"patterns": [
								{
									"match": "extends|super",
									"name": "storage.modifier.java"
								},
								{
									"match": "\\w+",
									"name": "entity.name.type.java"
								}
							]
						},
						"5": {
							"name": "variable.other.declaration.java"
						}
					}
				}
			]
		},
		"class-name": {
			"patterns": [
				{
					"match": "(\\w+\\.)*\\w+",
					"name": "entity.name.class.java"
				}
			]
		}
	}
}